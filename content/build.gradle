import org.gradle.api.tasks.Exec

plugins {
	id 'org.springframework.boot' version '2.1.3.RELEASE'
	id 'org.jetbrains.kotlin.jvm' version '1.3.21'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.3.21'
}

apply plugin: 'io.spring.dependency-management'

group = 'hu.martontoth'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

bootJar {
	archiveName = 'content.jar'
}

task dockerClean(type: Exec) {
	commandLine 'docker', 'rmi', '-f', "martontoth/notflix-${project.name}:${project.version}"
}

task dockerBuild(type: Exec) {
	commandLine 'docker', 'build', '.' ,
			'-t', "martontoth/notflix-${project.name}:${project.version}",
			'-t', "martontoth/notflix-${project.name}:latest"
}

task dockerPush(type: Exec) {
	commandLine 'docker', 'push', "martontoth/notflix-${project.name}:latest"
}
